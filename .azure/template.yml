parameters:
  name: ''
  pool: ''
  packages: false
  also_forked: true

jobs:
- job: ${{ parameters.name }}
  pool: ${{ parameters.pool }}

  strategy:
    matrix:
      Python37:
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'

  - bash: npm install -g yarn
    displayName: "Install Yarn"

  - bash: yarn
    displayName: "Install Deps"

  - script: |
      python -m pip install --upgrade pip
      pip install -e .[dev]
      jupyter labextension install .
      jupyter serverextension enable --py nbcelltests
    displayName: 'Developer install'

  - script:
      make verify-install
    displayName: 'Check everything was installed'

  - script: |
      make lint
    displayName: 'Lint'

  - script:
      make tests
    displayName: 'Test'

  - ${{ if eq(parameters.also_forked, 'true') }}:

    - script:
        make testpy-forked
      displayName: 'pytest --forked'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: 'python_junit.xml'
      testRunTitle: 'Publish test results for Python $(python.version) $(manylinux_flag)'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/*coverage.xml'

  - ${{ if eq(parameters.packages, 'true') }}:

    - script: |
        # duplicates pyproject.toml; see https://github.com/pypa/pip/issues/6041 etc etc etc...
        python -m pip install wheel setuptools jupyter-packaging twine
        make dist
      displayName: 'Create packages'

    - task: TwineAuthenticate@0
      inputs:
        artifactFeeds: jupyter/python-packages

    - script: |
        twine check dist/* && twine upload -r jupyter/python-packages --config-file $(PYPIRC_PATH) dist/*
      displayName: 'Upload packages'
      condition: contains(variables['Build.SourceBranch'], 'tags')  # todo: match "release" style tags only (v...)

    - task: Npm@1
      inputs:
        command: publish
        publishRegistry: useFeed
        publishFeed: jupyter/python-packages
      condition: contains(variables['Build.SourceBranch'], 'tags')  # todo: match "release" style tags only (v...)
